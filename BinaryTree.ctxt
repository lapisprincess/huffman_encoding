#BlueJ class context
comment0.target=BinaryTree
comment0.text=\n\ This\ is\ an\ implementation\ of\ a\ binary\ tree\n\n\ @author\ David\n\ @version\ 8/9/17\n
comment1.params=
comment1.target=BinaryTree()
comment1.text=\n\ Creates\ an\ empty\ binary\ tree\n
comment10.params=
comment10.target=void\ inOrder()
comment10.text=\n\ Performs\ inorder\ traversal;\ prints\ data\ when\ node\ is\ "visited."\n
comment11.params=T
comment11.target=void\ inOrder(BinaryTree)
comment12.params=
comment12.target=void\ preOrder()
comment12.text=\n\ Performs\ preorder\ traversal;\ prints\ data\ when\ node\ is\ "visited."\n
comment13.params=T
comment13.target=void\ preOrder(BinaryTree)
comment14.params=
comment14.target=void\ postOrder()
comment14.text=\n\ Performs\ postorder\ traversal;\ prints\ data\ when\ node\ is\ "visited."\n
comment15.params=T
comment15.target=void\ postOrder(BinaryTree)
comment2.params=new_root
comment2.target=BinaryTree(BinaryTree.Node)
comment2.text=\n\ Creates\ a\ binary\ tree\ with\ the\ given\ root\n\ @param\ newRoot\ \ reference\ to\ the\ root\ node\n
comment3.params=new_data\ leftTree\ rightTree
comment3.target=BinaryTree(java.lang.Object,\ BinaryTree,\ BinaryTree)
comment3.text=\n\ Creates\ a\ binary\ tree\ with\ the\ given\ data\ at\ the\ root\ and\ subtrees\n\ @param\ new_data\ \ reference\ to\ the\ data\ for\ the\ root\ node\n\ @param\ leftTree\ \ reference\ to\ the\ left\ subtree\n\ @param\ rightTree\ reference\ to\ the\ right\ subtree\n
comment4.params=
comment4.target=java.lang.Object\ getData()
comment4.text=\n\ @return\ the\ data\ item\ stored\ in\ the\ root\ node\n
comment5.params=
comment5.target=BinaryTree\ getLeftSubtree()
comment5.text=\n\ @return\ the\ left\ subtree,\ or\ null\ if\ either\ the\ root\ \n\ or\ the\ left\ subtree\ is\ null\n
comment6.params=
comment6.target=BinaryTree\ getRightSubtree()
comment6.text=\n\ @return\ the\ right\ subtree,\ or\ null\ if\ either\ the\ root\ \n\ or\ the\ right\ subtree\ is\ null\n
comment7.params=
comment7.target=boolean\ isLeaf()
comment7.text=\n\ @return\ true\ if\ root\ node\ is\ a\ leaf,\ false\ otherwise\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\n\ @return\ string\ representation\ of\ the\ list\n
comment9.params=node\ depth\ sb
comment9.target=void\ toString(BinaryTree.Node,\ int,\ java.lang.StringBuilder)
comment9.text=\ Converts\ a\ sub-tree\ to\ a\ string.\ \n\ Performs\ a\ preorder\ traversal.\ \n\ @param\ node\ The\ local\ root\ \n\ @param\ depth\ The\ depth\ \n\ @param\ sb\ The\ StringBuilder\ to\ save\ the\ output\ \n
numComments=16
